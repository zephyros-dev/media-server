#jinja2:lstrip_blocks: True
{% if ansible_hostname == 'staging' %}
{
	acme_dns porkbun {
    api_key {{ porkbun_api_key }}
    api_secret_key {{ porkbun_api_secret_key }}
	}
}
{% endif %}
# CORS snippet
# https://caddyserver.com/docs/caddyfile/directives/import#examples
(cors) {
	@origin header Origin {args[0]}
	header @origin Access-Control-Allow-Origin "{args[0]}"
	header @origin Access-Control-Allow-Methods "OPTIONS,HEAD,GET,POST,PUT,PATCH,DELETE"
}
# A snippet to check if a cookie token is set. if not, store the current page as the referer and redirect to auth site
(proxy-auth) {
  # if cookie not = some-token-nonsense
  @no-auth {
    not path *favicon*
    not header_regexp mycookie Cookie myid={{ caddyfile_auth_token }}
    # https://github.com/caddyserver/caddy/issues/3916
  }
  # store current time, page and redirect to auth
  route @no-auth {
    header Set-Cookie "myreferer={scheme}://{host}{uri}; Domain={{ server_domain }}; Path=/; Max-Age=30; HttpOnly; SameSite=Strict; Secure"
    redir https://auth.{{ server_domain }}
  }
}
auth.{{ server_domain }} {
  route {
    # require authentication
    basic_auth / {
      {{ caddyfile_auth_user }} {{ caddyfile_auth_pass }}
    }
    # upon successful auth, set a client token
    header Set-Cookie "myid={{ caddyfile_auth_token }}; Domain={{ server_domain }}; Path=/; Max-Age=3600; HttpOnly; SameSite=Strict; Secure"
    # delete the referer cookie
    header +Set-Cookie "myreferer=null; Domain={{ server_domain }}; Path=/; Expires=Thu, 25 Sep 1971 12:00:00 GMT; HttpOnly; SameSite=Strict; Secure"
    # redirect back to the original site
    redir {http.request.cookie.myreferer}
  }
  # fallback
  respond "Nope"
}
(global-config) {
    encode gzip
}
# https://owasp.org/www-project-secure-headers/index.html#div-bestpractices
(security-header) {
  header_down Strict-Transport-Security "max-age=31536000; includeSubDomains"
  header_down Referrer-Policy "strict-origin-when-cross-origin"
  header_down X-Content-Type-Options "nosniff"
  header_down X-Frame-Options "SAMEORIGIN"
  header_down Permissions-Policy "accelerometer=(), autoplay=(), camera=(), cross-origin-isolated=(), display-capture=(), encrypted-media=(), fullscreen=(), geolocation=(), gyroscope=(), keyboard-map=(), magnetometer=(), microphone=(), midi=(), payment=(), picture-in-picture=(), publickey-credentials-get=(), screen-wake-lock=(), sync-xhr=(self), usb=(), web-share=(), xr-spatial-tracking=(), clipboard-read=(), clipboard-write=(), gamepad=(), hid=(), idle-detection=(), interest-cohort=(), serial=(), unload=()"
  # These header blocks all resources from external sites including images
  # header_down Cross-Origin-Embedder-Policy "require-corp"
  # header_down Cross-Origin-Opener-Policy "same-origin"
  # header_down Cross-Origin-Resource-Policy "cross-origin"
}
{% for key,value in application | dictsort %}
  {% if value.transform.state == 'started' %}
    {% if value.param.caddy_proxy is defined %}
      {% set name = key | replace("_", "-") %}
{{ name }}.{{ server_domain }} {
  import global-config
      {% if value.param.caddy_sso %}
  import proxy-auth
      {% endif %}
      {% if value.param.caddy_rewrite is defined %}
        {% for rule in value.param.caddy_rewrite %}
  rewrite {{ rule.src }} {{ rule.dest }}
        {% endfor %}
      {% endif %}
  reverse_proxy {{ value.transform.caddy_proxy_url }} {
    import security-header
    {% if name == 'cockpit' %}
    transport http {
        tls_insecure_skip_verify
    }
    {% endif %}
  }
      {% if name == 'nextcloud' %}
  redir /.well-known/carddav /remote.php/dav/ 301
  redir /.well-known/caldav /remote.php/dav/ 301
      {% endif %}
      {% if name == 'cockpit' %}
  tls {
    dns porkbun {
      api_key {{ porkbun_api_key }}
      api_secret_key {{ porkbun_api_secret_key }}
    }
  }
      {% endif %}
}
    {% endif %}
  {% endif %}
{% endfor %}
