- name: Setup snapraid
  tags: snapraid
  become: true
  block:
    - name: Install snapraid-btrfs
      ansible.builtin.copy:
        src: submodules/snapraid-btrfs/snapraid-btrfs
        dest: /usr/local/bin/snapraid-btrfs
        mode: "0755"
    - name: Configure snapraid
      ansible.builtin.template:
        src: snapraid/snapraid.conf.j2
        dest: /etc/snapraid.conf
        mode: "0644"
    - name: Check if previous snapshot exists
      ansible.builtin.stat:
        path: "{{ item }}/.snapshots"
      register: snapper_snapshot_state
      loop: "{{ snapper_configs | json_query('[*].path') }}"
    - name: Restore configuration for snapshot that exists
      vars:
        _snapshot_exists_item: "{{ snapper_snapshot_state.results | json_query('[?stat.exists].item') | to_json }}"
        _query: "[?contains(`{{ _snapshot_exists_item }}`, path)].{name: name, path: path}"
        snapper_existing_snapshot: "{{ snapper_configs | json_query(_query) }}"
      block:
        - name: Create snapper configuration list
          community.general.ini_file:
            path: /etc/sysconfig/snapper
            section: null
            option: SNAPPER_CONFIGS
            value: '"{{ snapper_existing_snapshot | json_query("[].name") | join(" ") }}"'
            mode: "0644"
            no_extra_spaces: true
        - name: Create snapper config folder
          ansible.builtin.file:
            path: /etc/snapper/configs
            mode: "0755"
            state: directory
        # https://github.com/openSUSE/snapper/issues/408#issuecomment-554719988
        # Need to make a valid snapper config here for the config check command in the role to work
        - name: Create snapper place-holder config files if not exists
          ansible.builtin.copy:
            dest: /etc/snapper/configs/{{ item.name }}
            mode: "0644"
            force: false
            content: |
              SUBVOLUME="{{ item.path }}"
          loop: "{{ snapper_existing_snapshot }}"
    - name: Configure snapper
      ansible.builtin.include_role:
        name: aisbergg.snapper
        apply:
          become: true
      vars:
        __snapper_dependencies: []
    - name: Setup snapraid-btrfs-runner
      tags: snapraid_runner
      vars:
        snapraid_runner_path: /opt/snapraid-btrfs-runner
      block:
        - name: Setup snapraid-btrfs-runner folder
          ansible.builtin.file:
            path: "{{ snapraid_runner_path }}/"
            state: directory
            mode: "0755"
        - name: Install snapraid-btrfs-runner script
          ansible.builtin.copy:
            src: submodules/snapraid-btrfs-runner/snapraid-btrfs-runner.py
            dest: "{{ snapraid_runner_path }}/snapraid-btrfs-runner.py"
            mode: "0700"
        - name: Check if default config differs
          ansible.builtin.copy:
            src: submodules/snapraid-btrfs-runner/snapraid-btrfs-runner.conf.example
            dest: "{{ snapraid_runner_path }}/snapraid-btrfs-runner.conf.example"
            mode: "0600"
          register: snapraid_runner_config
        - name: Replace default config if changed # noqa: no-handler
          ansible.builtin.copy:
            remote_src: true
            mode: "0600"
            src: "{{ snapraid_runner_path }}/snapraid-btrfs-runner.conf.example"
            dest: "{{ snapraid_runner_path }}/snapraid-btrfs-runner.conf"
          when: snapraid_runner_config.changed
        - name: Configure snapraid runner config
          community.general.ini_file:
            path: "{{ snapraid_runner_path }}/snapraid-btrfs-runner.conf"
            section: "{{ item.section }}"
            option: "{{ item.option }}"
            value: "{{ item.value }}"
            allow_no_value: "{{ item.allow_no_value | default(false) }}"
            mode: "0600"
          loop:
            - section: snapraid-btrfs
              option: executable
              value: /usr/local/bin/snapraid-btrfs
            - section: snapper
              option: executable
              value: /usr/bin/snapper
            - section: snapraid
              option: executable
              value: /usr/bin/snapraid
            - section: snapraid
              option: config
              value: /etc/snapraid.conf
            - section: logging
              option: file
              value: ""
        - name: Template snapraid runner systemd
          ansible.builtin.template:
            src: snapraid/snapraid-runner.{{ item }}.j2
            dest: /etc/systemd/system/snapraid-runner.{{ item }}
            mode: "0600"
          loop:
            - service
            - timer
        - name: Enable snapraid runner systemd timer
          ansible.builtin.systemd:
            daemon_reload: true
            enabled: true
            state: started
            name: snapraid-runner.timer
